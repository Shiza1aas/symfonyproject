<?php

/**
 * Baseuser_details
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $user_name
 * @property string $user_password
 * @property boolean $is_activated
 * @property string $user_email
 * 
 * @method string       getUserName()      Returns the current record's "user_name" value
 * @method string       getUserPassword()  Returns the current record's "user_password" value
 * @method boolean      getIsActivated()   Returns the current record's "is_activated" value
 * @method string       getUserEmail()     Returns the current record's "user_email" value
 * @method user_details setUserName()      Sets the current record's "user_name" value
 * @method user_details setUserPassword()  Sets the current record's "user_password" value
 * @method user_details setIsActivated()   Sets the current record's "is_activated" value
 * @method user_details setUserEmail()     Sets the current record's "user_email" value
 * 
 * @package    test
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseuser_details extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_details');
        $this->hasColumn('user_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('user_password', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_activated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('user_email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}